"""
        Admin handler
"""
from asyncio import sleep
from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
# Import Filters:
from tg_bot.filters import IsPrivate
# Import Machine State:
from tg_bot.states import AdminReportStateMachine

from tg_bot.create_advertising import AD_TEXT_PATH, PICTURE_PATH


# ----- Handler: Admin ----- #
async def admin_start(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–æ–º–∞–Ω–¥—ã start –∏ '–ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ –Ω–∞ –∞–¥–º–∏–Ω—Å—Ç–≤–æ'
    :param message: user message 'start'
    :return: reply text message to admin
    """
    await message.reply(
        text='–ü—Ä–∏–≤–µ—Ç, admin!\n'
             '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É:'
    )


async def start_create_new_advertising(message: types.Message):
    await message.bot.send_message(
        chat_id=message.from_user.id,
        text=f"–û—Ç–ø—Ä–∞–≤—å —Ä–µ–∫–ª–∞–º–Ω—ã–π —Ç–µ–∫—Å—Ç:"
    )
    await AdminReportStateMachine.text_advertising.set()


async def send_advertising_text(message: types.Message):
    text_advertising = message.text
    text_advertising += f"\n- - - - - - - - - -\n" \
                        f"–¢—É—Ç üëÜ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏ —Ç–≤–æ—è —Ä–µ–∫–ª–∞–º–∞ üëâ @freedom_cats"
    with open(AD_TEXT_PATH, "w") as file:
        file.write(text_advertising)
    await message.bot.send_message(
        chat_id=message.from_user.id,
        text="–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.\n"
             "–û—Ç–ø—Ä–∞–≤—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ä–µ–∫–ª–∞–º—ã:",
    )
    await AdminReportStateMachine.photo_advertising.set()


async def send_advertising_photo(message: types.Message, state: FSMContext):
    await message.photo[-1].download(destination_file=PICTURE_PATH)
    await message.bot.send_message(
        chat_id=message.from_user.id,
        text="–ö–∞—Ä—Ç–∏–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.",
    )
    await state.reset_state(with_data=False)


# ----- Hendlers: Register Admin (–†–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏) ----- #
def register_admin_base(dp: Dispatcher):
    """
    –†–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    :param dp: Dispatcher
    :return: register admin handlers
    """

    # –†–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ–º handlers:

    # is_admin - –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: –ø—Ä–∏ –≤—Ö–æ–¥–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ - True:
    # /start:
    dp.register_message_handler(
        admin_start,
        IsPrivate,
        commands=['start'],
        is_admin=True
    )
    #  /new_ad:
    dp.register_message_handler(
        start_create_new_advertising,
        IsPrivate,
        commands=['new_ad'],
        is_admin=True
    )
    dp.register_message_handler(
        send_advertising_text,
        IsPrivate,
        state=AdminReportStateMachine.text_advertising,
        is_admin=True
    )
    dp.register_message_handler(
        send_advertising_photo,
        IsPrivate,
        content_types=["photo"],
        state=AdminReportStateMachine.photo_advertising,
        is_admin=True
    )
